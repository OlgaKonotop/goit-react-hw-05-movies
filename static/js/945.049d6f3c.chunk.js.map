{"version":3,"file":"static/js/945.049d6f3c.chunk.js","mappings":"+SACMA,EAAU,mCACHC,EAAkB,mCAAG,oGACTC,EAAAA,EAAAA,IACrB,kDACA,CACEC,OAAQ,CACNC,QAASJ,KALiB,cAC1BK,EAD0B,yBASzBA,EAASC,MATgB,2CAAH,qDAYlBC,EAAgB,mCAAG,yGAAOC,EAAP,+BAAe,MAAf,SACPN,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,QAASJ,EACTQ,MAAM,GAAD,OAAKA,MANc,cACxBH,EADwB,yBAUvBA,EAASC,MAVc,2CAAH,qDAYhBG,EAAc,mCAAG,WAAMC,GAAN,uFACLR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,oBACoCV,IAF/B,cACtBK,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdK,EAAc,mCAAG,WAAMD,GAAN,uFACLR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,4BAC4CV,IAFvC,cACtBK,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdM,EAAiB,mCAAG,yGAAOF,EAAP,+BAAiB,IAAjB,SACRR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,4BAC4CV,EAD5C,YADQ,cACzBK,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,oD,qICxB9B,EAfkB,SAAC,GAAsB,IAApBO,EAAmB,EAAnBA,aACbC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIJ,IAEV,8BACGA,EAAaK,KAAI,SAAAC,GAAI,OACpB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMT,GAA/C,SACGK,EAAKK,SAFDL,EAAKE,GADM,KAS3B,ECbYI,EAAY,WACvB,OAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eAWA,OACE,kBAAMC,SAViB,SAAAC,GACvBA,EAAEC,iBAEsC,IAApCD,EAAEE,OAAO,GAAGC,MAAMC,OAAOC,OAI7BP,EAAgB,CAAEnB,MAAOqB,EAAEE,OAAO,GAAGC,QAHnCG,MAAM,8BAIT,EAEC,WACE,kBAAOC,KAAK,UACZ,mBAAQA,KAAK,SAAb,sBAGL,E,kBCgCD,EA9Ce,WAAO,IAAD,EACnB,GAAuBV,EAAAA,EAAAA,MACjBW,EAAS,WADf,eAC+BC,IAAI,gBAApB,QAAgC,GAE/C,GAAyCC,EAAAA,EAAAA,YAAzC,eAAO1B,EAAP,KAAqB2B,EAArB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KA8BA,OA5BAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gGAEID,EAAS,MACJL,EAHT,kEAO6B9B,EAAAA,EAAAA,IAAiB8B,GAP9C,OAOUO,EAPV,OAQIF,EAAS,MAEyB,IAA9BE,EAAWC,QAAQX,QACrBQ,EAAS,2DAEX1B,QAAQC,IAAIoB,GACZG,EAAiBI,EAAWC,SAE5B7B,QAAQC,IAAI2B,EAAWC,SAhB3B,kDAkBIH,EAAS,uDAlBb,uGADc,uBAAC,WAAD,wBAuBdI,CAAuBT,EACxB,GAAE,CAACA,IAEJrB,QAAQC,IAAIJ,IAGV,6BACE,SAACY,EAAD,IACCgB,IAAS,uBAAIA,KACd,wBACGJ,GAAaxB,IAAgB,SAAC,EAAD,CAAWA,aAAcA,QAI9D,C","sources":["components/services/API.jsx","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'cd08058c291f007122df115265286adb';\nexport const fetchPopularyFilms = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchSearchFilms = async (query = 'cat') => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        api_key: API_KEY,\n        query: `${query}`,\n      },\n    }\n  );\n  return response.data;\n};\nexport const fetchFilmsCard = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchCastFilms = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsFilms = async (movieId = 255) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n","import { Link, useLocation } from 'react-router-dom';\nconst MovieList = ({ searhGallery }) => {\n  const location = useLocation();\n  console.log(searhGallery);\n  return (\n    <>\n      {searhGallery.map(item => (\n        <li key={item.id}>\n          <Link to={`/movies/${item.id}`} state={{ from: location }}>\n            {item.title}\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n};\nexport default MovieList;\n","//import { Wrapper, Input, Icon } from './SearchBox.styled';\nimport { useSearchParams } from 'react-router-dom';\nexport const SearchBox = () => {\n  const [, setSearchParams] = useSearchParams();\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n\n    if (e.target[0].value.trim().length === 0) {\n      alert('Please, enter another value');\n      return;\n    }\n    setSearchParams({ query: e.target[0].value });\n  };\n  return (\n    <form onSubmit={handleSubmitForm}>\n      <input type=\"text\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import MovieList from 'components/MoviesList/MoviesList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchFilms } from '../components/services/API';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const [searhGallery, setSearchGallery] = useState();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function handleFetchSearchFilms() {\n      try {\n        setError(null);\n        if (!movieName) {\n          return;\n        }\n\n        const searchFilm = await fetchSearchFilms(movieName);\n        setError(null);\n\n        if (searchFilm.results.length === 0) {\n          setError('Nothing found üòí. Please enter another value ');\n        }\n        console.log(movieName);\n        setSearchGallery(searchFilm.results);\n\n        console.log(searchFilm.results);\n      } catch {\n        setError('Error üòí. Please reload page üëç');\n      } finally {\n      }\n    }\n    handleFetchSearchFilms(movieName);\n  }, [movieName]);\n\n  console.log(searhGallery);\n\n  return (\n    <main>\n      <SearchBox />\n      {error && <p>{error}</p>}\n      <ul>\n        {movieName && searhGallery && <MovieList searhGallery={searhGallery} />}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","fetchPopularyFilms","axios","params","api_key","response","data","fetchSearchFilms","query","fetchFilmsCard","movieId","fetchCastFilms","fetchReviewsFilms","searhGallery","location","useLocation","console","log","map","item","to","id","state","from","title","SearchBox","useSearchParams","setSearchParams","onSubmit","e","preventDefault","target","value","trim","length","alert","type","movieName","get","useState","setSearchGallery","error","setError","useEffect","searchFilm","results","handleFetchSearchFilms"],"sourceRoot":""}