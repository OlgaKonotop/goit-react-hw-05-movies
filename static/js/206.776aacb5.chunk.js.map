{"version":3,"file":"static/js/206.776aacb5.chunk.js","mappings":"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","sources":["components/services/API.jsx","pages/MovieCard/MovieCard.styled.jsx","pages/MovieCard/MovieCard.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'cd08058c291f007122df115265286adb';\nexport const fetchPopularyFilms = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchSearchFilms = async (query = 'cat') => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        api_key: API_KEY,\n        query: `${query}`,\n      },\n    }\n  );\n  return response.data;\n};\nexport const fetchFilmsCard = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchCastFilms = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsFilms = async (movieId = 255) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Main = styled.main`\n  display: block;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  margin-top: 10px;\n  margin-bottom: 15px;\n`;\nexport const BoxCard = styled.div`\n  margin-left: 10px;\n`;\n\nexport const LinkBtn = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: #ce5e36;\n  }\n`;\nexport const Title = styled.h1`\n  margin-bottom: 10px;\n  font-size: 24px;\n  font-weight: 900;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 10px;\n  font-size: 16px;\n`;\nexport const TitleCategory = styled.h3`\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const AdittionalBlock = styled.div`\n  margin-bottom: 20px;\n  margin-top: 20px;\n  font-size: 16px;\n  padding: 20px 20px;\n\n  color: black;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n`;\n\nexport const TitleAdittional = styled.h3`\n  margin-bottom: 15px;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const ItemAdittional = styled.li`\n  margin-bottom: 10px;\n  font-size: 16px;\n`;\n","import { fetchFilmsCard } from 'components/services/API';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport {\n  Main,\n  Box,\n  BoxCard,\n  LinkBtn,\n  Title,\n  Text,\n  TitleCategory,\n  AdittionalBlock,\n  TitleAdittional,\n  ItemAdittional,\n} from './MovieCard.styled';\n\nconst MovieCard = () => {\n  const { movieId } = useParams({});\n  const [film, setFilm] = useState();\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state.from ?? '/';\n\n  // console.log('card');\n  // console.log(movieId);\n  useEffect(() => {\n    async function handleFetchFilmCard() {\n      try {\n        // console.log('card11');\n        const filmCard = await fetchFilmsCard(movieId);\n        setError(null);\n        setFilm(filmCard);\n      } catch {\n        setError('Error 😒. Please reload page 👍');\n      } finally {\n      }\n    }\n    handleFetchFilmCard(Number(movieId));\n  }, [movieId]);\n  if (!film) {\n    return;\n  }\n  console.log(error);\n  // console.log(film);\n  const { poster_path, original_title, overview, genres, vote_average } = film;\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : 'https://www.pngall.com/wp-content/uploads/7/Gallery-PNG-Free-Download.png';\n\n  const voteAverage = Math.round(vote_average * 10);\n  const genresFilm = genres.map(genre => genre.name).join(' ');\n  return (\n    film && (\n      <Main>\n        <LinkBtn to={backLinkHref}>Go Back</LinkBtn>\n        <Box>\n          <img src={poster} alt=\"11\" width=\"240\"></img>\n          <BoxCard>\n            <Title>{original_title}</Title>\n            <Text>User Score: {voteAverage}%</Text>\n            {overview && <TitleCategory>Overviev</TitleCategory>}\n            <Text>{overview}</Text>\n            {genresFilm && <TitleCategory>Genres</TitleCategory>}\n            <Text> {genresFilm}</Text>\n          </BoxCard>\n        </Box>\n        <AdittionalBlock>\n          <TitleAdittional>Adittional international</TitleAdittional>\n          <ul>\n            <ItemAdittional>\n              <Link to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </Link>\n            </ItemAdittional>\n            <ItemAdittional>\n              <Link to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n              </Link>\n            </ItemAdittional>\n          </ul>\n        </AdittionalBlock>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </Main>\n    )\n  );\n};\n\nexport default MovieCard;\n"],"names":["API_KEY","fetchPopularyFilms","axios","params","api_key","response","data","fetchSearchFilms","query","fetchFilmsCard","movieId","fetchCastFilms","fetchReviewsFilms","Main","styled","Box","BoxCard","LinkBtn","NavLink","Title","Text","TitleCategory","AdittionalBlock","TitleAdittional","ItemAdittional","useParams","useState","film","setFilm","error","setError","backLinkHref","useLocation","state","from","useEffect","filmCard","handleFetchFilmCard","Number","console","log","poster_path","original_title","overview","genres","vote_average","poster","voteAverage","Math","round","genresFilm","map","genre","name","join","to","src","alt","width","Suspense","fallback"],"sourceRoot":""}