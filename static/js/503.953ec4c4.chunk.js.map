{"version":3,"file":"static/js/503.953ec4c4.chunk.js","mappings":"uOACMA,EAAU,mCACHC,EAAkB,mCAAG,oGACTC,EAAAA,EAAAA,IACrB,kDACA,CACEC,OAAQ,CACNC,QAASJ,KALiB,cAC1BK,EAD0B,yBASzBA,EAASC,MATgB,2CAAH,qDAYlBC,EAAgB,mCAAG,yGAAOC,EAAP,+BAAe,MAAf,SACPN,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,QAASJ,EACTQ,MAAM,GAAD,OAAKA,MANc,cACxBH,EADwB,yBAUvBA,EAASC,MAVc,2CAAH,oD,4HCZhBG,EAAY,WACvB,OAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eAWA,OACE,kBAAMC,SAViB,SAAAC,GACvBA,EAAEC,iBAEsC,IAApCD,EAAEE,OAAO,GAAGC,MAAMC,OAAOC,OAI7BP,EAAgB,CAAEH,MAAOK,EAAEE,OAAO,GAAGC,QAHnCG,MAAM,8BAIT,EAEC,WACE,kBAAOC,KAAK,UACZ,mBAAQA,KAAK,SAAb,sBAGL,E,kBCqCD,EApDe,WAAO,IAAD,EACnB,GAAuBV,EAAAA,EAAAA,MACjBW,EAAS,WADf,eAC+BC,IAAI,gBAApB,QAAgC,GAE/C,GAAyCC,EAAAA,EAAAA,YAAzC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KA8BA,OA5BAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gGAEID,EAAS,MACJN,EAHT,kEAO6Bd,EAAAA,EAAAA,IAAiBc,GAP9C,OAOUQ,EAPV,OAQIF,EAAS,MACTG,QAAQC,IAAIF,GACsB,IAA9BA,EAAWG,QAAQd,QACrBS,EAAS,2DAEXG,QAAQC,IAAIV,GACZI,EAAiBI,EAAWG,SAE5BF,QAAQC,IAAIF,GAhBhB,kDAkBIF,EAAS,uDAlBb,uGADc,uBAAC,WAAD,wBAuBdM,CAAuBZ,EACxB,GAAE,CAACA,IAEJS,QAAQC,IAAIP,IAGV,6BACE,SAACf,EAAD,IACCiB,IAAS,uBAAIA,KACd,wBACGL,GACCG,GACAA,EAAaU,KAAI,SAAAC,GAAI,OACnB,yBACE,cAAGC,KAAK,IAAR,SAAaD,EAAKE,SADXF,EAAKG,GADK,QAQ9B,C","sources":["components/services/API.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'cd08058c291f007122df115265286adb';\nexport const fetchPopularyFilms = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchSearchFilms = async (query = 'cat') => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        api_key: API_KEY,\n        query: `${query}`,\n      },\n    }\n  );\n  return response.data;\n};\n// export const fetchSearchFilms = async (query = 'batman') => {\n//   const response = await axios.get(\n//     'https://api.themoviedb.org/3/search/movie',\n//     {\n//       params: {\n//         api_key: 'cd08058c291f007122df115265286adb',\n//         page: 1,\n//         language: 'en-US',\n//         query: `${query}`,\n//       },\n//     }\n//   );\n//   return response.data;\n// };\n\nexport const fetchFilms = async query => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        api_key: 'cd08058c291f007122df115265286adb',\n        page: 1,\n        language: 'en-US',\n        query: `${query}`,\n      },\n    }\n  );\n  return response.data;\n};\n","//import { Wrapper, Input, Icon } from './SearchBox.styled';\nimport { useSearchParams } from 'react-router-dom';\nexport const SearchBox = () => {\n  const [, setSearchParams] = useSearchParams();\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n\n    if (e.target[0].value.trim().length === 0) {\n      alert('Please, enter another value');\n      return;\n    }\n    setSearchParams({ query: e.target[0].value });\n  };\n  return (\n    <form onSubmit={handleSubmitForm}>\n      <input type=\"text\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchFilms } from '../components/services/API';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const [searhGallery, setSearchGallery] = useState();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function handleFetchSearchFilms() {\n      try {\n        setError(null);\n        if (!movieName) {\n          return;\n        }\n\n        const searchFilm = await fetchSearchFilms(movieName);\n        setError(null);\n        console.log(searchFilm);\n        if (searchFilm.results.length === 0) {\n          setError('Nothing found üòí. Please enter another value ');\n        }\n        console.log(movieName);\n        setSearchGallery(searchFilm.results);\n\n        console.log(searchFilm);\n      } catch {\n        setError('Error üòí. Please reload page üëç');\n      } finally {\n      }\n    }\n    handleFetchSearchFilms(movieName);\n  }, [movieName]);\n\n  console.log(searhGallery);\n\n  return (\n    <main>\n      <SearchBox />\n      {error && <p>{error}</p>}\n      <ul>\n        {movieName &&\n          searhGallery &&\n          searhGallery.map(item => (\n            <li key={item.id}>\n              <a href=\"1\">{item.title}</a>\n            </li>\n          ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","fetchPopularyFilms","axios","params","api_key","response","data","fetchSearchFilms","query","SearchBox","useSearchParams","setSearchParams","onSubmit","e","preventDefault","target","value","trim","length","alert","type","movieName","get","useState","searhGallery","setSearchGallery","error","setError","useEffect","searchFilm","console","log","results","handleFetchSearchFilms","map","item","href","title","id"],"sourceRoot":""}